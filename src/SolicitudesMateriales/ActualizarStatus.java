/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package SolicitudesMateriales;

import BD.BD;
import BD.InsertarProductosTaller;
import BD.ProductosTaller;
import Formularios.Inicio;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingConstants;
import javax.swing.table.TableColumn;

/**
 *
 * @author jluis
 */
public class ActualizarStatus extends javax.swing.JInternalFrame {
     int idlote;
     int idpedido;
     int depto;
     int status;
     int idloteejemplo;
    /**
     * Creates new form STATUS
     */
    public ActualizarStatus() {
        initComponents();
        Trabajos.setDefaultRenderer (Object.class, new FormatoTabla());
        TrabajosEjemplo.setDefaultRenderer (Object.class, new FormatoTabla());
        ListarTrabajos();
        ListarTrabajosEjemplos();
        selectusuario();
        estado.setEnabled(false);
       nota.setEnabled(false);
       aceptar.setEnabled(false);
       estado.setSelectedItem("");
       estado1.setEnabled(false);
       nota1.setEnabled(false);
       aceptar1.setEnabled(false);
       estado1.setSelectedItem("");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
     public void selectusuario() {
        String a = System.getProperty("user.name");//usar usuario de windows
        if (a.equals("jluis")) {
            depto = 0;
        } //INFORMATICA
        else if (a.equals("ehernandez")) {
            depto = 1;
        } //TRANSFORMADORES
        else if (a.equals("ingenieria2")) {
            depto = 2;
        } //INGENIERIA
        else if (a.equals("potting")) {
            depto = 3;
        } //STRIP & POTTING
        else if (a.equals("Inspeccion")) {
            depto = 4;
        }// INSPECCION
        else if (a.equals("testing")) {
            depto = 5;
        } // TESTING
        else if (a.equals("calidad")) {
            depto = 6;
        } // CALIDAD 
        else if (a.equals("oecheverria")) {
            depto = 7;
        }//GERENTE OPERACIONES
        else if (a.equals("bodega")) {
            depto = 8;
        }//BODEGA 
        else if (a.equals("ingenieria")) {
            depto = 9;
        }//RELACION CON EL CLIENTE 
        else if(a.equals("taller")){
            depto = 10;
        }//TALLER
        else if(a.equals("Sotano")){
            depto = 10;
        }//TALLER
        else if(a.equals("apacheco")){
            depto = 11;
        }
        else if(a.equals("deptochips")){
            depto = 12;
            
        }
    }  
     
    private void cambioestado(){
    
       if(estado.getSelectedItem().toString().equalsIgnoreCase("EN PROCESO")){
       status = 1;
       }else if (estado.getSelectedItem().toString().equalsIgnoreCase("SOLICITANDO MATERIAL")){status = 2;}
    
    } 
    private void cambioestadoeje(){
    
       if(estado1.getSelectedItem().toString().equalsIgnoreCase("EN PROCESO")){
       status = 1;
       }else if (estado1.getSelectedItem().toString().equalsIgnoreCase("SOLICITANDO MATERIAL")){status = 2;}
    
    } 
    
    private void actualizar(){
     idpedido = (Integer.parseInt(String.valueOf(PENDIENTES.getModel().getValueAt(PENDIENTES.getSelectedRow(), 0))));
       try {
    Connection cnn = BD.getConnection();
    PreparedStatement ps = null;
    ps= cnn.prepareStatement("update pedidos_trabajos set status = "+status+", nota = '"+nota.getText()+"' where id_pedido ="+idpedido);
    ps.executeUpdate();
    cnn.close();
    ps.close();
      } catch (SQLException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }   
       ListarProductosTrabajos();
       estado.setEnabled(false);
       nota.setEnabled(false);
       aceptar.setEnabled(false);
       estado.setSelectedItem("");
          
    }
    
    private void actualizarEjemplo(){
     idpedido = (Integer.parseInt(String.valueOf(PENDIENTESEjemplo.getModel().getValueAt(PENDIENTESEjemplo.getSelectedRow(), 0))));
       try {
    Connection cnn = BD.getConnection();
    PreparedStatement ps = null;
    ps= cnn.prepareStatement("update pedidos_trabajos set status = "+status+", nota = '"+nota.getText()+"' where id_pedido ="+idpedido);
    ps.executeUpdate();
    cnn.close();
    ps.close();
      } catch (SQLException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }   
       ListarProductosTrabajosEjemplos();
       estado1.setEnabled(false);
       nota1.setEnabled(false);
       aceptar1.setEnabled(false);
       estado1.setSelectedItem("");
          
    }
    
    
    
    private void ListarTrabajos(){
        ArrayList<ProductosTaller> result = InsertarProductosTaller.ListarProductosPendientesMasterActualizar(PN.getText());
        RecargarTabla(result);  
    }
     private void RecargarTabla(ArrayList<ProductosTaller> list) {
              
              Object[][] datos = new Object[list.size()][6];
              int i = 0;
              for(ProductosTaller t : list)
              {
                  datos[i][0] = t.getIdlote();
                  datos[i][1] = t.getPN();
                  datos[i][2] = t.getJOB();
                  datos[i][3] = t.getNolote();
                  datos[i][4] = t.getCantidad();
                  datos[i][5] = t.getPrioridad();
                  i++;
              }    
             Trabajos.setModel(new javax.swing.table.DefaultTableModel(
                datos,
                new String[]{
                " ","P/N","JOB","NO. LOTE","CANTIDAD","PRIORIDAD"           })
             {  
                 @Override
             public boolean isCellEditable(int row, int column){
                 return false;
             }
             });
             TableColumn columna1 = Trabajos.getColumn(" ");
             columna1.setPreferredWidth(-20);
             TableColumn columna2 = Trabajos.getColumn("P/N");
             columna2.setPreferredWidth(75);
             TableColumn columna3 = Trabajos.getColumn("JOB");
             columna3.setPreferredWidth(75);
             TableColumn columna4 = Trabajos.getColumn("NO. LOTE");
             columna4.setPreferredWidth(75);
             TableColumn columna5 = Trabajos.getColumn("CANTIDAD");
             columna5.setPreferredWidth(75);   
             
             }    
    
     private void ListarProductosTrabajos(){
        ArrayList<ProductosTaller> result = InsertarProductosTaller.ListarProductosTrabajoMasterActualizar(idlote);
        RecargarTablaProductos(result);  
    }
     private void RecargarTablaProductos(ArrayList<ProductosTaller> list){
         
              Object[][] datos = new Object[list.size()][5];
              int i = 0;
              for(ProductosTaller t : list)
              {
                  datos[i][0] = t.getIdpedido();
                  datos[i][1] = t.getDescripcion();
                  datos[i][2] = t.getCantidad();
                  datos[i][3] = t.getEstatus();
                  datos[i][4] = t.getCantidad();
                  i++;
              }    
             PENDIENTES.setModel(new javax.swing.table.DefaultTableModel(
                datos,
                new String[]{
                " ","DESCRIPCION","CANTIDAD","ESTATUS","PRIORIDAD"})
             {  
                 @Override
             public boolean isCellEditable(int row, int column){
                 return false;
             }
             });
             TableColumn columna1 = PENDIENTES.getColumn(" ");
             columna1.setPreferredWidth(0);
             TableColumn columna2 = PENDIENTES.getColumn("DESCRIPCION");
             columna2.setPreferredWidth(220);
             TableColumn columna3 = PENDIENTES.getColumn("CANTIDAD");
             columna3.setPreferredWidth(50);
             TableColumn columna4 = PENDIENTES.getColumn("ESTATUS");
             columna4.setPreferredWidth(220);
             }
     
     private void ListarProductosTrabajosEjemplos(){
        ArrayList<ProductosTaller> result = InsertarProductosTaller.ListarProductosTrabajoEjemploMasterActualizar(idloteejemplo);
        RecargarTablaProductoseje(result);  
    }
     private void RecargarTablaProductoseje(ArrayList<ProductosTaller> list){
         
              Object[][] datos = new Object[list.size()][4];
              int i = 0;
              for(ProductosTaller t : list)
              {
                  datos[i][0] = t.getIdpedido();
                  datos[i][1] = t.getDescripcion();
                  datos[i][2] = t.getCantidad();
                  datos[i][3] = t.getEstatus();
                 // datos[i][4] = t.getCantidad();
                  i++;
              }    
             PENDIENTESEjemplo.setModel(new javax.swing.table.DefaultTableModel(
                datos,
                new String[]{
                " ","DESCRIPCION","CANTIDAD","ESTATUS"       })
             {  
                 @Override
             public boolean isCellEditable(int row, int column){
                 return false;
             }
             });
             TableColumn columna1 = PENDIENTESEjemplo.getColumn(" ");
             columna1.setPreferredWidth(0);
             TableColumn columna2 = PENDIENTESEjemplo.getColumn("DESCRIPCION");
             columna2.setPreferredWidth(220);
             TableColumn columna3 = PENDIENTESEjemplo.getColumn("CANTIDAD");
             columna3.setPreferredWidth(50);
             TableColumn columna4 = PENDIENTESEjemplo.getColumn("ESTATUS");
             columna4.setPreferredWidth(220);
             }
     
     
     
     
     
      private void ListarTrabajosEjemplos(){
        ArrayList<ProductosTaller> result = InsertarProductosTaller.ListarProductosPendientesEjemploMaster(PNEjemplo.getText());
        RecargarTablaEjemplo(result);  
    }
     private void RecargarTablaEjemplo(ArrayList<ProductosTaller> list) {
         
              Object[][] datos = new Object[list.size()][6];
              int i = 0;
              for(ProductosTaller t : list)
              {
                  datos[i][0] = t.getIdlote();
                  datos[i][1] = t.getPN();
                  datos[i][2] = t.getJOB();
                  datos[i][3] = t.getEstatus();
                  datos[i][4] = t.getCantidad();
                  datos[i][5] = t.getPrioridad();
                  i++;
              }    
             TrabajosEjemplo.setModel(new javax.swing.table.DefaultTableModel(
                datos,
                new String[]{
                " ","P/N","JOB","NO. LOTE","CANTIDAD","PRIORIDAD"           })
             {  
                 @Override
             public boolean isCellEditable(int row, int column){
                 return false;
             }
             });
             TableColumn columna1 = TrabajosEjemplo.getColumn(" ");
             columna1.setPreferredWidth(-20);
             TableColumn columna2 = TrabajosEjemplo.getColumn("P/N");
             columna2.setPreferredWidth(75);
             TableColumn columna3 = TrabajosEjemplo.getColumn("JOB");
             columna3.setPreferredWidth(75);
             TableColumn columna4 = TrabajosEjemplo.getColumn("NO. LOTE");
             columna4.setPreferredWidth(75);
             TableColumn columna5 = TrabajosEjemplo.getColumn("CANTIDAD");
             columna5.setPreferredWidth(75);   
             }    
     
     
     
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel2 = new javax.swing.JPanel();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Trabajos = new javax.swing.JTable();
        jScrollPane2 = new javax.swing.JScrollPane();
        PENDIENTES = new javax.swing.JTable();
        PN = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        aceptar = new javax.swing.JButton();
        estado = new javax.swing.JComboBox<>();
        jScrollPane3 = new javax.swing.JScrollPane();
        nota = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        TrabajosEjemplo = new javax.swing.JTable();
        jScrollPane5 = new javax.swing.JScrollPane();
        PENDIENTESEjemplo = new javax.swing.JTable();
        PNEjemplo = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        jPanel6 = new javax.swing.JPanel();
        aceptar1 = new javax.swing.JButton();
        estado1 = new javax.swing.JComboBox<>();
        jScrollPane6 = new javax.swing.JScrollPane();
        nota1 = new javax.swing.JTextArea();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 100, Short.MAX_VALUE)
        );

        setClosable(true);
        setTitle("ACTUALIZACION DE ESTADO DE PEDIDOS");

        jPanel1.setBackground(new java.awt.Color(102, 204, 255));

        Trabajos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "P/N", "JOB", "LOTE", "CANTIDAD"
            }
        ));
        Trabajos.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TrabajosMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Trabajos);

        PENDIENTES.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "DESCRIPCION", "FECHA PEDIDO", "ESTADO"
            }
        ));
        PENDIENTES.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PENDIENTESMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(PENDIENTES);

        PN.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PNKeyReleased(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel1.setText("P/N");

        aceptar.setText("ACTUALIZAR");
        aceptar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptarActionPerformed(evt);
            }
        });

        estado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "EN PROCESO", "SOLICITANDO MATERIAL" }));
        estado.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estadoActionPerformed(evt);
            }
        });

        nota.setColumns(20);
        nota.setRows(5);
        jScrollPane3.setViewportView(nota);

        jLabel2.setText("NOTA");

        jLabel3.setText("ESTADO");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel2)
                    .addComponent(jLabel3))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aceptar)
                .addGap(66, 66, 66))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(estado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(aceptar)
                .addGap(7, 7, 7))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PN, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(PN, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        jTabbedPane1.addTab("TRABAJOS", jPanel1);

        jPanel5.setBackground(new java.awt.Color(102, 204, 255));

        TrabajosEjemplo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "P/N", "JOB", "LOTE", "CANTIDAD"
            }
        ));
        TrabajosEjemplo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TrabajosEjemploMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(TrabajosEjemplo);

        PENDIENTESEjemplo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "DESCRIPCION", "FECHA PEDIDO", "ESTADO"
            }
        ));
        PENDIENTESEjemplo.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                PENDIENTESEjemploMouseClicked(evt);
            }
        });
        jScrollPane5.setViewportView(PENDIENTESEjemplo);

        PNEjemplo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                PNEjemploKeyReleased(evt);
            }
        });

        jLabel4.setFont(new java.awt.Font("Dialog", 1, 18)); // NOI18N
        jLabel4.setText("P/N");

        aceptar1.setText("ACTUALIZAR");
        aceptar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                aceptar1ActionPerformed(evt);
            }
        });

        estado1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "", "EN PROCESO", "SOLICITANDO MATERIAL" }));
        estado1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                estado1ActionPerformed(evt);
            }
        });

        nota1.setColumns(20);
        nota1.setRows(5);
        jScrollPane6.setViewportView(nota1);

        jLabel5.setText("NOTA");

        jLabel6.setText("ESTADO");

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(estado1, javax.swing.GroupLayout.PREFERRED_SIZE, 223, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel6))
                .addContainerGap(27, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(aceptar1)
                .addGap(75, 75, 75))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(estado1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(13, 13, 13)
                .addComponent(aceptar1)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(PNEjemplo, javax.swing.GroupLayout.PREFERRED_SIZE, 258, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addGap(12, 12, 12)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 423, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 553, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel5Layout.createSequentialGroup()
                .addContainerGap(33, Short.MAX_VALUE)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(PNEjemplo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel6, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane5, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addGap(23, 23, 23))
        );

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1268, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 304, Short.MAX_VALUE)
            .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("EJEMPLOS", jPanel4);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 11, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PNKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PNKeyReleased
       ListarTrabajos();
    }//GEN-LAST:event_PNKeyReleased

    private void TrabajosMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TrabajosMouseClicked
      idlote = (Integer.parseInt(String.valueOf(Trabajos.getModel().getValueAt(Trabajos.getSelectedRow(), 0))));
      ListarProductosTrabajos();
      estado.setEnabled(false);
       nota.setEnabled(false);
       aceptar.setEnabled(false);
       estado.setSelectedItem("");
    }//GEN-LAST:event_TrabajosMouseClicked

    private void PENDIENTESMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PENDIENTESMouseClicked
          
        String Est = (String.valueOf(PENDIENTES.getModel().getValueAt(PENDIENTES.getSelectedRow(), 3)));
        if (Est.equals("EN PROCESO") || Est.equals("SOLICITANDO MATERIAL")){
        estado.setEnabled(true);
        nota.setEnabled(true);
        aceptar.setEnabled(true);
        }
        else{
        estado.setEnabled(false);
        nota.setEnabled(false);
        aceptar.setEnabled(false);
        }
        //String estado = (String.valueOf(PENDIENTES.getModel().getValueAt(PENDIENTES.getSelectedRow(), 3)));
        //if(estado.equals("ENTREGADO")){aceptar.setEnabled(true);}else{aceptar.setEnabled(false);}
       
    }//GEN-LAST:event_PENDIENTESMouseClicked

    private void aceptarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptarActionPerformed
        actualizar();
    }//GEN-LAST:event_aceptarActionPerformed

    private void estadoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estadoActionPerformed
        cambioestado();
    }//GEN-LAST:event_estadoActionPerformed

    private void TrabajosEjemploMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TrabajosEjemploMouseClicked
      idloteejemplo = (Integer.parseInt(String.valueOf(TrabajosEjemplo.getModel().getValueAt(TrabajosEjemplo.getSelectedRow(), 0))));
      ListarProductosTrabajosEjemplos();
      estado1.setEnabled(false);
      nota1.setEnabled(false);
      aceptar1.setEnabled(false);
      estado1.setSelectedItem("");
    }//GEN-LAST:event_TrabajosEjemploMouseClicked

    private void PENDIENTESEjemploMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_PENDIENTESEjemploMouseClicked
      
        String Est = (String.valueOf(PENDIENTESEjemplo.getModel().getValueAt(PENDIENTESEjemplo.getSelectedRow(), 3)));
         if (Est.equals("EN PROCESO") || Est.equals("SOLICITANDO MATERIAL")){
        estado1.setEnabled(true);
        nota1.setEnabled(true);
        aceptar1.setEnabled(true);
        }
        else{
        estado1.setEnabled(false);
        nota1.setEnabled(false);
        aceptar1.setEnabled(false);
         }
    }//GEN-LAST:event_PENDIENTESEjemploMouseClicked

    private void PNEjemploKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_PNEjemploKeyReleased
        ListarTrabajosEjemplos();
    }//GEN-LAST:event_PNEjemploKeyReleased

    private void aceptar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_aceptar1ActionPerformed
         actualizarEjemplo();        
    }//GEN-LAST:event_aceptar1ActionPerformed

    private void estado1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_estado1ActionPerformed
        cambioestadoeje();
    }//GEN-LAST:event_estado1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable PENDIENTES;
    private javax.swing.JTable PENDIENTESEjemplo;
    private javax.swing.JTextField PN;
    private javax.swing.JTextField PNEjemplo;
    private javax.swing.JTable Trabajos;
    private javax.swing.JTable TrabajosEjemplo;
    private javax.swing.JButton aceptar;
    private javax.swing.JButton aceptar1;
    private javax.swing.JComboBox<String> estado;
    private javax.swing.JComboBox<String> estado1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JScrollPane jScrollPane5;
    private javax.swing.JScrollPane jScrollPane6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTextArea nota;
    private javax.swing.JTextArea nota1;
    // End of variables declaration//GEN-END:variables
}
